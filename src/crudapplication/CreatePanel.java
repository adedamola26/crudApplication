/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package crudapplication;

import java.awt.FileDialog;
import java.awt.Image;
import static java.awt.event.KeyEvent.VK_BACK_SPACE;
import static java.awt.event.KeyEvent.VK_DELETE;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.HEIGHT;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.User;
import model.UserDirectory;

/**
 *
 * @author adeda
 */
public class CreatePanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePanel
     */
    JPanel aPanel;
    UserDirectory allUsers;
    JFrame mainFrame;
    User fUser;
    ImageIcon imageIcon;

    public CreatePanel(JPanel aPanel, UserDirectory allUsers, JFrame mainFrame) {
        initComponents();
        fUser = new User();
        autoLabel.setText(String.valueOf(fUser.getId()));
        this.aPanel = aPanel;
        this.allUsers = allUsers;
        this.mainFrame = mainFrame;
        File f = new File("."); 
        String path = f.getAbsolutePath()+ "\\placeholder.png";
        BufferedImage image = null;
        try {
            image = ImageIO.read(new File(path));

        } catch (IOException error) {
        }
        Image scaledImage = image.getScaledInstance(244,
                226, Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(scaledImage);
        photoLabel.setIcon(imageIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        cellNumLabel = new javax.swing.JLabel();
        cellNumField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        photoLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        photoButton = new javax.swing.JButton();
        autoLabel = new javax.swing.JLabel();
        genderBox = new javax.swing.JComboBox<>();
        dayField = new javax.swing.JTextField();
        monthField = new javax.swing.JTextField();
        yearField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();
        levelBox = new javax.swing.JComboBox<>();

        titleLabel.setText("Enter Employee Details");

        nameLabel.setText("Name");

        nameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameFieldKeyPressed(evt);
            }
        });

        idLabel.setText("Employee ID");

        ageLabel.setText("Age");

        ageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageFieldKeyPressed(evt);
            }
        });

        genderLabel.setText("Gender");

        dateLabel.setText("Start Date");

        levelLabel.setText("Level");

        cellNumLabel.setText("Cell Phone Number");

        cellNumField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cellNumFieldKeyPressed(evt);
            }
        });

        emailLabel.setText("Email address");

        photoLabel.setText("PHoto");

        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        photoButton.setText("Upload Photo");
        photoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoButtonActionPerformed(evt);
            }
        });

        autoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        genderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        dayField.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        dayField.setForeground(new java.awt.Color(153, 153, 153));
        dayField.setText("DD");
        dayField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dayFieldFocusLost(evt);
            }
        });
        dayField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dayFieldMouseClicked(evt);
            }
        });
        dayField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayFieldKeyPressed(evt);
            }
        });

        monthField.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        monthField.setForeground(new java.awt.Color(153, 153, 153));
        monthField.setText("MM");
        monthField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthFieldFocusLost(evt);
            }
        });
        monthField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthFieldMouseClicked(evt);
            }
        });
        monthField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthFieldActionPerformed(evt);
            }
        });
        monthField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monthFieldKeyPressed(evt);
            }
        });

        yearField.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        yearField.setForeground(new java.awt.Color(153, 153, 153));
        yearField.setText("YYYY"); // NOI18N
        yearField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearFieldFocusLost(evt);
            }
        });
        yearField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                yearFieldMouseExited(evt);
            }
        });
        yearField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearFieldActionPerformed(evt);
            }
        });
        yearField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearFieldKeyPressed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 51, 51));

        levelBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Junior", "Senior" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ageField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(autoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))))
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cellNumLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(levelLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(levelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cellNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(photoButton)))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(photoButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idLabel)
                            .addComponent(autoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLabel)
                            .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(levelLabel)
                            .addComponent(levelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cellNumLabel)
                            .addComponent(cellNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if (validateSave()) {
            User inputUser = new User();
            String date = yearField.getText() + "-" + monthField.getText() + "-" + dayField.getText();
            inputUser.setName(nameField.getText());
            inputUser.setEmpId();
            inputUser.setdt(LocalDate.parse(date));
            inputUser.setAge(Integer.parseInt(ageField.getText()));
            inputUser.setGender(String.valueOf(genderBox.getSelectedItem()));
            inputUser.setLevel(String.valueOf(levelBox.getSelectedItem()));
            inputUser.setCellNum(Long.parseLong(cellNumField.getText()));
            inputUser.setEmail(emailField.getText());
            inputUser.setPhoto(photoLabel.getIcon());
            allUsers.addUser(inputUser);
            JOptionPane.showMessageDialog(aPanel, "User saved successfully.", "Success", HEIGHT);
            inputUser.setId();
            clearFields();
    }//GEN-LAST:event_saveButtonActionPerformed
    }
    private void photoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoButtonActionPerformed
        // TODO add your handling code here:
        try {
            FileDialog dialog = new FileDialog(mainFrame, "Select Photo", FileDialog.LOAD);
            dialog.setVisible(true);
            // Save file's path
            String filePath = (dialog.getDirectory() + dialog.getFile());

            // create image object
            BufferedImage image = null;

            try {
                image = ImageIO.read(new File(filePath));
            } catch (IOException error) {
            }

            // Set image dimension to be equal to dimension of label it will fit in
            Image scaledImage = image.getScaledInstance(photoLabel.getWidth(),
                    photoLabel.getHeight(), Image.SCALE_SMOOTH);

            // Make image an ImageIcon object for JLabel to accept it
            ImageIcon imageIcon = new ImageIcon(scaledImage);
            photoLabel.setIcon(imageIcon);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(aPanel, "You did not select any photo.", "Alert", HEIGHT);
        }

    }//GEN-LAST:event_photoButtonActionPerformed

    private void yearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearFieldActionPerformed

    private void monthFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthFieldActionPerformed

    private void yearFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearFieldMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_yearFieldMouseExited

    private void monthFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthFieldMouseClicked
        // TODO add your handling code here:
//        if (monthField.getText().equals("MM")) {
//            monthField.setText("");
//        }
    }//GEN-LAST:event_monthFieldMouseClicked

    private void dayFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayFieldMouseClicked
        // TODO add your handling code here:
//        if (dayField.getText().equals("DD")) {
//            dayField.setText("");
//        }
    }//GEN-LAST:event_dayFieldMouseClicked

    private void nameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((!Character.isLetter(c)) && (!Character.isWhitespace(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            nameField.setEditable(false);
            errorLabel.setText("Please enter letters only.");
        } else {
            nameField.setEditable(true);
        }
    }//GEN-LAST:event_nameFieldKeyPressed

    private void ageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            ageField.setEditable(false);
            errorLabel.setText("Please enter numbers only.");
        } else {
            ageField.setEditable(true);
        }
    }//GEN-LAST:event_ageFieldKeyPressed

    private void yearFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (yearField.getText().length() == 4 && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            yearField.setEditable(false);
            errorLabel.setText("Please enter only 4 digits");
        } else {
            if ((!Character.isDigit(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
                yearField.setEditable(false);
                errorLabel.setText("Please enter numbers only.");
            } else {
                yearField.setEditable(true);
            }
        }
    }//GEN-LAST:event_yearFieldKeyPressed

    private void cellNumFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cellNumFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (cellNumField.getText().length() == 10 && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            cellNumField.setEditable(false);
            errorLabel.setText("Please enter only 10 digits");
        } else {
            if ((!Character.isDigit(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
                cellNumField.setEditable(false);
                errorLabel.setText("Please enter numbers only.");
            } else {
                cellNumField.setEditable(true);
            }
        }
    }//GEN-LAST:event_cellNumFieldKeyPressed

    private void monthFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (monthField.getText().length() == 2 && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            monthField.setEditable(false);
            errorLabel.setText("Please enter only 2 digits");
        } else {
            if ((!Character.isDigit(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
                monthField.setEditable(false);
                errorLabel.setText("Please enter numbers only.");
            } else {
                monthField.setEditable(true);
            }
        }
    }//GEN-LAST:event_monthFieldKeyPressed

    private void dayFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (dayField.getText().length() == 2 && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            dayField.setEditable(false);
            errorLabel.setText("Please enter only 2 digits");
        } else {
            if ((!Character.isDigit(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
                dayField.setEditable(false);
                errorLabel.setText("Please enter numbers only.");
            } else {
                dayField.setEditable(true);
            }
        }
    }//GEN-LAST:event_dayFieldKeyPressed

    private void yearFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearFieldFocusGained
        // TODO add your handling code here:
        if(yearField.getText().equals("YYYY")){
            yearField.setText("");
        }
    }//GEN-LAST:event_yearFieldFocusGained

    private void yearFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearFieldFocusLost
        // TODO add your handling code here:
        if(yearField.getText().equals("")){
            yearField.setText("YYYY");
        }
        errorLabel.setText("");
    }//GEN-LAST:event_yearFieldFocusLost

    private void monthFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthFieldFocusGained
        // TODO add your handling code here:
        if(monthField.getText().equals("MM")){
            monthField.setText("");
        }
    }//GEN-LAST:event_monthFieldFocusGained

    private void monthFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthFieldFocusLost
        // TODO add your handling code here:
        if(monthField.getText().equals("")){
            monthField.setText("MM");
        }
    }//GEN-LAST:event_monthFieldFocusLost

    private void dayFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayFieldFocusGained
        // TODO add your handling code here:
        if(dayField.getText().equals("DD")){
            dayField.setText("");
        }
    }//GEN-LAST:event_dayFieldFocusGained

    private void dayFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayFieldFocusLost
        // TODO add your handling code here:
        if(dayField.getText().equals("")){
            dayField.setText("DD");
        }
    }//GEN-LAST:event_dayFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JLabel autoLabel;
    private javax.swing.JTextField cellNumField;
    private javax.swing.JLabel cellNumLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dayField;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JComboBox<String> genderBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JComboBox<String> levelBox;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField monthField;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton photoButton;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        nameField.setText("");
        autoLabel.setText(String.valueOf(fUser.getId()));
        ageField.setText("");
        yearField.setText("");
        monthField.setText("");
        dayField.setText("");
        cellNumField.setText("");
        emailField.setText("");
        photoLabel.setIcon(imageIcon);
        errorLabel.setText("");
    }

    public boolean validateSave() {
        boolean b = false;
        String date = yearField.getText() + "-" + monthField.getText() + "-" + dayField.getText();
        try {
            LocalDate.parse(date);
            if (nameField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(aPanel, "Please enter employee's name", "Error", HEIGHT);
                nameField.requestFocus();
            } else if (ageField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(aPanel, "Please enter employee's age", "Error", HEIGHT);
                ageField.requestFocus();
            } else if (cellNumField.getText().length() != 10) {
                JOptionPane.showMessageDialog(aPanel, "Please enter a ten digit phone number.", "Error", HEIGHT);
                cellNumField.requestFocus();
            } else if (emailField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(aPanel, "Please enter employee email", "Error", HEIGHT);
                emailField.requestFocus();
            } else if (photoLabel.getIcon() == imageIcon) {
                JOptionPane.showMessageDialog(aPanel, "Please upload employee photo", "Error", HEIGHT);
            } else {
                b = true;
            }
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(aPanel, "Please enter valid start date in the format YYYY MM DD.", "Error", HEIGHT);
            yearField.requestFocus();
        }
        return b;
    }

}
