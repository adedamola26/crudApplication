/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package crudapplication;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.FileDialog;
import java.awt.Image;
import static java.awt.event.KeyEvent.VK_BACK_SPACE;
import static java.awt.event.KeyEvent.VK_DELETE;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.HEIGHT;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.EmployeeDirectory;
import model.Employee;

/**
 *
 * @author adeda
 */
public class CreatePanel extends javax.swing.JPanel {

    private JPanel aPanel;
    private EmployeeDirectory allUsers;
    private JFrame mainFrame;
    private Employee fUser; // create user object to get the id counter
    private ImageIcon defaultIcon;

    /**
     * Creates new form CreatePanel
     */
    public CreatePanel(JPanel aPanel, EmployeeDirectory allUsers, JFrame aFrame) {
        initComponents();
        fUser = new Employee();
        autoIdLabel.setText(String.valueOf(fUser.getIdCounter()));
        this.aPanel = aPanel;
        this.allUsers = allUsers;
        this.mainFrame = aFrame;

        //get default photo
        File f = new File(".");
        String path = f.getAbsolutePath() + "\\placeholder.png";
        BufferedImage image = null;
        try {
            image = ImageIO.read(new File(path));

        } catch (IOException error) {
        }
        Image scaledImage = image.getScaledInstance(244,
                226, Image.SCALE_SMOOTH);
        defaultIcon = new ImageIcon(scaledImage);
        photoLabel.setIcon(defaultIcon);

        JTextFieldDateEditor editor = (JTextFieldDateEditor) dateChooser.getDateEditor();
        editor.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderBox = new javax.swing.JComboBox<>();
        dateLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        cellNumLabel = new javax.swing.JLabel();
        cellNumField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        levelBox = new javax.swing.JComboBox<>();
        nameLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        photoLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        ageLabel = new javax.swing.JLabel();
        photoButton = new javax.swing.JButton();
        ageField = new javax.swing.JTextField();
        autoIdLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();

        genderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        dateLabel.setText("Start Date");

        levelLabel.setText("Level");

        cellNumLabel.setText("Cell Phone Number");

        cellNumField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cellNumFieldFocusLost(evt);
            }
        });
        cellNumField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cellNumFieldKeyPressed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 51, 51));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Enter Employee's Details");

        emailLabel.setText("Email address");

        levelBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Junior", "Senior" }));

        nameLabel.setText("Name");

        emailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFieldFocusLost(evt);
            }
        });

        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });
        nameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameFieldKeyPressed(evt);
            }
        });

        idLabel.setText("Employee ID");

        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        ageLabel.setText("Age");

        photoButton.setText("Upload Photo");
        photoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoButtonActionPerformed(evt);
            }
        });

        ageField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageFieldFocusLost(evt);
            }
        });
        ageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageFieldKeyPressed(evt);
            }
        });

        autoIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        genderLabel.setText("Gender");

        dateChooser.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageField)
                            .addComponent(autoIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cellNumLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(levelLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(levelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cellNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(photoButton)
                        .addGap(129, 129, 129))))
            .addGroup(layout.createSequentialGroup()
                .addGap(364, 364, 364)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(photoButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idLabel)
                            .addComponent(autoIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateLabel)
                            .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(levelLabel)
                            .addComponent(levelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cellNumLabel)
                            .addComponent(cellNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cellNumFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cellNumFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (cellNumField.getText().length() == 10 && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            cellNumField.setEditable(false);
            errorLabel.setText("Please enter only 10 digits");
        } else {
            if ((!Character.isDigit(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
                cellNumField.setEditable(false);
                errorLabel.setText("Please enter numbers only.");
            } else {
                cellNumField.setEditable(true);
            }
        }
    }//GEN-LAST:event_cellNumFieldKeyPressed

    private void nameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((!Character.isLetter(c)) && (!Character.isWhitespace(c)) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            nameField.setEditable(false);
            errorLabel.setText("Please enter letters only.");
        } else {
            nameField.setEditable(true);
        }
    }//GEN-LAST:event_nameFieldKeyPressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if (validateSave()) {
            Employee inputUser = new Employee();
            inputUser.setName(nameField.getText());
            inputUser.setEmpId();
            inputUser.setStartDate(dateChooser.getDate());
            inputUser.setAge(Integer.parseInt(ageField.getText()));
            inputUser.setGender(String.valueOf(genderBox.getSelectedItem()));
            inputUser.setLevel(String.valueOf(levelBox.getSelectedItem()));
            inputUser.setCellNum(Long.parseLong(cellNumField.getText()));
            inputUser.setEmail(emailField.getText());
            inputUser.setPhoto(photoLabel.getIcon());
            allUsers.addUser(inputUser);
            JOptionPane.showMessageDialog(aPanel, "Employee's details saved successfully.", "Success", HEIGHT);
            inputUser.increaseIdCounter();
            clearFields();
    }//GEN-LAST:event_saveButtonActionPerformed
    }
    private void photoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoButtonActionPerformed
        // TODO add your handling code here:
        try {
            FileDialog dialog = new FileDialog(mainFrame, "Select Photo", FileDialog.LOAD);
            dialog.setVisible(true);
            // Save file's path
            String filePath = (dialog.getDirectory() + dialog.getFile());

            // create image object
            BufferedImage image = null;

            try {
                image = ImageIO.read(new File(filePath));
            } catch (IOException error) {
            }

            // Set image dimension to be equal to dimension of label it will fit in
            Image scaledImage = image.getScaledInstance(photoLabel.getWidth(),
                    photoLabel.getHeight(), Image.SCALE_SMOOTH);

            // Make image an ImageIcon object for JLabel to accept it
            ImageIcon dispPhoto = new ImageIcon(scaledImage);
            photoLabel.setIcon(dispPhoto);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(aPanel, "You did not select any photo.", "Alert", HEIGHT);
        }
    }//GEN-LAST:event_photoButtonActionPerformed

    private void ageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (ageField.getText().length() == 3 && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            ageField.setEditable(false);
            errorLabel.setText("Please enter no more than 3 digits");
        } else if (!Character.isDigit(c) && (c != VK_BACK_SPACE) && (c != VK_DELETE)) {
            ageField.setEditable(false);
            errorLabel.setText("Please enter numbers only.");
        } else {
            ageField.setEditable(true);
        }
    }//GEN-LAST:event_ageFieldKeyPressed

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
        // TODO add your handling code here:
        errorLabel.setText("");
    }//GEN-LAST:event_nameFieldFocusLost

    private void ageFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageFieldFocusLost
        // TODO add your handling code here:
        errorLabel.setText("");

    }//GEN-LAST:event_ageFieldFocusLost

    private void cellNumFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cellNumFieldFocusLost
        // TODO add your handling code here:
        errorLabel.setText("");

    }//GEN-LAST:event_cellNumFieldFocusLost

    private void emailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusLost
        // TODO add your handling code here:
        String regex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(emailField.getText());

        if (matcher.matches() == false) {
            errorLabel.setText("Please enter a valid email address");
        } else {
            errorLabel.setText("");
        }


    }//GEN-LAST:event_emailFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JLabel autoIdLabel;
    private javax.swing.JTextField cellNumField;
    private javax.swing.JLabel cellNumLabel;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JComboBox<String> genderBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JComboBox<String> levelBox;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton photoButton;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private boolean validateSave() {
        boolean b = false;
        try {
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            String dt = fmt.format(dateChooser.getDate());

            String regex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(emailField.getText());

            if (nameField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(aPanel, "Please enter employee's name", "Error", HEIGHT);
                nameField.requestFocus();
            } else if (ageField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(aPanel, "Please enter employee's age", "Error", HEIGHT);
                ageField.requestFocus();
            } else if (cellNumField.getText().length() != 10) {
                JOptionPane.showMessageDialog(aPanel, "Please enter a ten digit phone number.", "Error", HEIGHT);
                cellNumField.requestFocus();
            } else if (matcher.matches() == false) {
                JOptionPane.showMessageDialog(aPanel, "Please enter a valid email address", "Error", HEIGHT);
                emailField.requestFocus();
            } else if (photoLabel.getIcon() == defaultIcon) {
                JOptionPane.showMessageDialog(aPanel, "Please upload employee photo", "Error", HEIGHT);
            } else {
                b = true;
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(aPanel, "Please enter a start date", "Error", HEIGHT);

        }
        return b;
    }

    private void clearFields() {
        nameField.setText("");
        autoIdLabel.setText(String.valueOf(fUser.getIdCounter()));
        ageField.setText("");
        dateChooser.setCalendar(null);
        cellNumField.setText("");
        emailField.setText("");
        photoLabel.setIcon(defaultIcon);
        errorLabel.setText("");
    }
}
